// ---------------------------------------------------------------------------

#include <vcl.h>
#include <fstream>
#include <string>

#include <Dialogs.hpp>
#pragma hdrstop

#include "Unit1.h"
#define toint(a) StrToInt(a)
#define tostr(a) IntToStr(a)
// ---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;

// ---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner) : TForm(Owner) {
}

// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
void __fastcall TForm1::addingClick(TObject *Sender) {
	fstream solution("Solution.txt", ios::out);
	if (x1->Text != "" && x2->Text != "" && y1->Text != "" && y2->Text != "") {
		x3->Text = toint(x1->Text) + toint(x2->Text);
		y3->Text = toint(y1->Text) + toint(y2->Text);
		solution << toint(x1->Text) << " + " << toint(x2->Text)
			<< " = " << toint(x3->Text) << "\n";
		solution << toint(y1->Text) << " + " << toint(y2->Text)
			<< " = " << toint(y3->Text) << "\n";
		if (VectorAmount->Text == "Трехмерный вектор") {
			if (z1->Text != "" && z2->Text != "") {
				solution << toint(z1->Text) << " + " << toint(z2->Text)
					<< " = " << toint(z3->Text) << "\n";
				z3->Text = toint(z1->Text) + toint(z2->Text);
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}

		}
		if (VectorAmount->Text == "Четырехмерный вектор") {
			if (z1->Text != "" && z2->Text != "") {
				z3->Text = toint(z1->Text) + toint(z2->Text);
				solution << toint(z1->Text) << " + " << toint(z2->Text)
					<< " = " << toint(z3->Text) << "\n";
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
			if (q1->Text != "" && q2->Text != "") {
				q3->Text = toint(q1->Text) + toint(q2->Text);
				solution << toint(q1->Text) << " + " << toint(q2->Text)
					<< " = " << toint(q3->Text) << "\n";
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
		}
		if (VectorAmount->Text == "Пятимерный вектор") {
			if (z1->Text != "" && z2->Text != "") {
				z3->Text = toint(z1->Text) + toint(z2->Text);
				solution << toint(z1->Text) << " + " << toint(z2->Text)
					<< " = " << toint(z3->Text) << "\n";
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
			if (w1->Text != "" && w2->Text != "") {
				w3->Text = toint(w1->Text) + toint(w2->Text);
				solution << toint(w1->Text) << " + " << toint(w2->Text)
					<< " = " << toint(w3->Text) << "\n";
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
			if (q1->Text != "" && q2->Text != "") {
				q3->Text = toint(q1->Text) + toint(q2->Text);
				solution << toint(q1->Text) << " + " << toint(q2->Text)
					<< " = " << toint(q3->Text) << "\n";
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
		}
		ErrorLabel->Caption = "";
	}
	else {
		ErrorLabel->Caption = "Заполните все поля!";
	}
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::subscriptionClick(TObject *Sender) {
	fstream solution("Solution.txt", ios::out);
	if (x1->Text != "" && x2->Text != "" && y1->Text != "" && y2->Text != "") {
		x3->Text = toint(x1->Text) - toint(x2->Text);
		y3->Text = toint(y1->Text) - toint(y2->Text);
		solution << toint(x1->Text) << " - " << toint(x2->Text)
			<< " = " << toint(x3->Text) << "\n";
		solution << toint(y1->Text) << " - " << toint(y2->Text)
			<< " = " << toint(y3->Text) << "\n";
		if (VectorAmount->Text == "Трехмерный вектор") {
			if (z1->Text != "" && z2->Text != "") {
				solution << toint(z1->Text) << " - " << toint(z2->Text)
					<< " = " << toint(z3->Text) << "\n";
				z3->Text = toint(z1->Text) - toint(z2->Text);
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}

		}
		if (VectorAmount->Text == "Четырехмерный вектор") {
			if (z1->Text != "" && z2->Text != "") {
				z3->Text = toint(z1->Text) - toint(z2->Text);
				solution << toint(z1->Text) << " - " << toint(z2->Text)
					<< " = " << toint(z3->Text) << "\n";
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
			if (q1->Text != "" && q2->Text != "") {
				q3->Text = toint(q1->Text) - toint(q2->Text);
				solution << toint(q1->Text) << " - " << toint(q2->Text)
					<< " = " << toint(q3->Text) << "\n";
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
		}
		if (VectorAmount->Text == "Пятимерный вектор") {
			if (z1->Text != "" && z2->Text != "") {
				z3->Text = toint(z1->Text) - toint(z2->Text);
				solution << toint(z1->Text) << " - " << toint(z2->Text)
					<< " = " << toint(z3->Text) << "\n";
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
			if (w1->Text != "" && w2->Text != "") {
				w3->Text = toint(w1->Text) - toint(w2->Text);
				solution << toint(w1->Text) << " - " << toint(w2->Text)
					<< " = " << toint(w3->Text) << "\n";
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
			if (q1->Text != "" && q2->Text != "") {
				q3->Text = toint(q1->Text) - toint(q2->Text);
				solution << toint(q1->Text) << " - " << toint(q2->Text)
					<< " = " << toint(q3->Text) << "\n";
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
		}
		ErrorLabel->Caption = "";
	}
	else {
		ErrorLabel->Caption = "Заполните все поля!";
	}
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::scalarClick(TObject *Sender) {
	fstream solution("Solution.txt", ios::out);
	int result = 0;
	if (x1->Text != "" && x2->Text != "" && y1->Text != "" && y2->Text != "") {
		result += toint(x1->Text) * toint(x2->Text);
		result += toint(y1->Text) * toint(y2->Text);
		solution << toint(x1->Text) << " * " << toint(x2->Text)
			<< " = " << toint(x1->Text) * toint(x2->Text) << '\n';
		solution << toint(y1->Text) << " * " << toint(y2->Text)
			<< " = " << toint(y1->Text) * toint(y2->Text) << '\n';
		if (VectorAmount->Text == "Трехмерный вектор") {
			if (z1->Text != "" && z2->Text != "") {
				result += toint(z1->Text) * toint(z2->Text);
				solution << toint(z1->Text) << " * " << toint(z2->Text)
					<< " = " << toint(z1->Text) * toint(z2->Text) << '\n';
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}

		}
		if (VectorAmount->Text == "Четырехмерный вектор") {
			if (z1->Text != "" && z2->Text != "") {
				result += toint(z1->Text) * toint(z2->Text);
				solution << toint(z1->Text) << " * " << toint(z2->Text)
					<< " = " << toint(z1->Text) * toint(z2->Text) << '\n';
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
			if (q1->Text != "" && q2->Text != "") {
				result += toint(q1->Text) * toint(q2->Text);
				solution << toint(q1->Text) << " * " << toint(q2->Text)
					<< " = " << toint(q1->Text) * toint(q2->Text) << '\n';
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}

		}
		if (VectorAmount->Text == "Пятимерный вектор") {
			if (z1->Text != "" && z2->Text != "") {
				solution << toint(z1->Text) << " * " << toint(z2->Text)
					<< " = " << toint(z1->Text) * toint(z2->Text) << '\n';
				result += toint(z1->Text) * toint(z2->Text);
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
			if (w1->Text != "" && w2->Text != "") {
				solution << toint(w1->Text) << " * " << toint(w2->Text)
					<< " = " << toint(w1->Text) * toint(w2->Text) << '\n';
				result += toint(w1->Text) * toint(w2->Text);
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
			if (q1->Text != "" && q2->Text != "") {
				solution << toint(q1->Text) << " * " << toint(q2->Text)
					<< " = " << toint(q1->Text) * toint(q2->Text) << '\n';
				result += toint(q1->Text) * toint(q2->Text);
			}
			else {
				ErrorLabel->Caption = "Заполните все поля!";
			}
			ErrorLabel->Caption = "";

		}
	}

	else {
		ErrorLabel->Caption = "Заполните все поля!";
	}
	if (ErrorLabel->Caption == "")
		ShowMessage("Скалярное произведение = " + IntToStr(result));

}

// ---------------------------------------------------------------------------

void __fastcall TForm1::drawClick(TObject *Sender) {
	if (VectorAmount->Text == "Двумерный вектор" && x1->Text != "" &&
		y1->Text != "") {
		fstream coordinates_file("coords.txt", ios::out);
		coordinates_file << (toint(x1->Text));
		coordinates_file << "\n";
		coordinates_file << (toint(y1->Text));
		coordinates_file.close();
		system("py draw2D.py");
	}
	else if (VectorAmount->Text == "Трехмерный вектор" && x1->Text != "" &&
		y1->Text != "" && z1->Text != "") {
		fstream coordinates_file("coords.txt", ios::out);
		coordinates_file << (toint(x1->Text));
		coordinates_file << "\n";
		coordinates_file << (toint(y1->Text));
		coordinates_file << "\n";
		coordinates_file << (toint(z1->Text));
		coordinates_file.close();
		system("py draw3D.py");
	}
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::vectorClick(TObject *Sender) {
	if (VectorAmount->Text == "Трехмерный вектор") {
		if (x1->Text != "" && y1->Text != "" && z1->Text != "" && x2->Text !=
			"" && y2->Text != "" && z2->Text != "") {
			x3->Text =
				IntToStr(toint(y1->Text) * toint(z1->Text) - toint(y2->Text)
				* toint(z1->Text));
			y3->Text =
				IntToStr(toint(x2->Text) * toint(z1->Text) - toint(x1->Text)
				* toint(z2->Text));
			z3->Text =
				IntToStr(toint(x1->Text) * toint(y2->Text) - toint(y1->Text)
				* toint(x2->Text));
			ErrorLabel->Caption = "";
		}
		else {
			ErrorLabel->Caption = "Заполните все поля!";
		}
	}
	else {
		ErrorLabel->Caption = "Выберите трехмерный вектор!";
	}
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::clearClick(TObject *Sender) {
	x1->Text = "";
	y1->Text = "";
	z1->Text = "";
	q1->Text = "";
	w1->Text = "";
	x2->Text = "";
	y2->Text = "";
	z2->Text = "";
	q2->Text = "";
	w2->Text = "";
	x3->Text = "";
	y3->Text = "";
	z3->Text = "";
	q3->Text = "";
	w3->Text = "";
	ErrorLabel->Caption = "";
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::create_randomClick(TObject *Sender) {
	randomize();
	if (LeftBorder->Text != "" && RightBorder->Text != "") {
		int left = toint(LeftBorder->Text);
		int right = toint(RightBorder->Text) + 1;
		x1->Text = random(right - left) + left;
		x2->Text = random(right - left) + left;
		y1->Text = random(right - left) + left;
		y2->Text = random(right - left) + left;
		if (VectorAmount->Text == "Трехмерный вектор") {
			z1->Text = random(right - left) + left;
			z2->Text = random(right - left) + left;
		}
		if (VectorAmount->Text == "Четырехмерный вектор") {
			z1->Text = random(right - left) + left;
			z2->Text = random(right - left) + left;
			q1->Text = random(right - left) + left;
			q2->Text = random(right - left) + left;
		}
		if (VectorAmount->Text == "Пятимерный вектор") {
			z1->Text = random(right - left) + left;
			z2->Text = random(right - left) + left;
			w1->Text = random(right - left) + left;
			w2->Text = random(right - left) + left;
			q1->Text = random(right - left) + left;
			q2->Text = random(right - left) + left;
		}
		ErrorLabel->Caption = "";
	}
	else {
		ErrorLabel->Caption = "Некорректные данные!";
	}

}
// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------
void __fastcall TForm1::VectorAmountChange(TObject *Sender) {
	if (VectorAmount->Text == "Двумерный вектор") {
		z1->Visible = false;
		z2->Visible = false;
		z3->Visible = false;
		w1->Visible = false;
		w2->Visible = false;
		w3->Visible = false;
		q1->Visible = false;
		q2->Visible = false;
		q3->Visible = false;
	}
	if (VectorAmount->Text == "Трехмерный вектор") {
		z1->Visible = true;
		z2->Visible = true;
		z3->Visible = true;
	}
	if (VectorAmount->Text == "Четырехмерный вектор") {
		z1->Visible = true;
		z2->Visible = true;
		z3->Visible = true;
		q1->Visible = true;
		q2->Visible = true;
		q3->Visible = true;
	}
	if (VectorAmount->Text == "Пятимерный вектор") {
		z1->Visible = true;
		z2->Visible = true;
		z3->Visible = true;
		w1->Visible = true;
		w2->Visible = true;
		w3->Visible = true;
		q1->Visible = true;
		q2->Visible = true;
		q3->Visible = true;
	}
}

// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------

void __fastcall TForm1::clearimgClick(TObject *Sender) {
	x1->Text = "";
	y1->Text = "";
	z1->Text = "";
	q1->Text = "";
	w1->Text = "";
	x2->Text = "";
	y2->Text = "";
	z2->Text = "";
	q2->Text = "";
	w2->Text = "";
	x3->Text = "";
	y3->Text = "";
	z3->Text = "";
	q3->Text = "";
	w3->Text = "";
	ErrorLabel->Caption = "";
}
// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

void __fastcall TForm1::x1KeyPress(TObject *Sender, System::WideChar &Key) {
	if (isdigit(Key) || (Key == VK_BACK)) {
		return;
	}

	else if ((Key == '-' || Key == '+') && (((TEdit*)Sender)->Text.Length
		() == 0))
		return;
	if (Key == '.' || Key == ',') {

		Key = FormatSettings.DecimalSeparator;

		if (((TEdit *)Sender)->Text.Pos(Key) != 0)
			Key = 0;
		else
			return;
	}
	Key = 0;
}

// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
void __fastcall TForm1::TurnVectorClick(TObject *Sender) {
	if (x1->Text != "" && y1->Text != "") {
		AnsiString degrees =
			InputBox("Градус",
			"Введите градус, на который нужно повернуть вектор", "");
        int i;
		if (degrees != "" && TryStrToInt(s,i)) {
			fstream coords("coords.txt", ios::out);
			coords << (toint(x1->Text)) << "\n";
			coords << (toint(y1->Text)) << "\n";
			coords << (toint(degrees)) << "\n";
			coords.close();
			system("py turn_vector.py");
		}
		else {
			ErrorLabel->Caption = "Некорректный угол!";
		}
	}
	else {
		ErrorLabel->Caption = "Заполните все поля!";
	}
}
// ---------------------------------------------------------------------------
